{"ast":null,"code":"import axios from 'axios';\nimport { ACCOUNT_LOADING, CREATE_ACCOUNT_FAILURE, CREATE_ACCOUNT_SUCCESS } from './types'; // create account \n\nexport const createAccount = userData => {\n  return async dispatch => {\n    dispatch(accountLoading());\n\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const response = await axios.post(`${baseUrl}/v1/accounts`, {\n        data: userData\n      }, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data) {\n        dispatch({\n          type: CREATE_ACCOUNT_SUCCESS,\n          payload: response.data\n        });\n      }\n    } catch (e) {\n      dispatch({\n        type: CREATE_ACCOUNT_FAILURE,\n        payload: e.response.data\n      });\n    }\n  };\n}; //account loading \n\nexport const accountLoading = () => {\n  return {\n    type: ACCOUNT_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/actions/accountAction.js"],"names":["axios","ACCOUNT_LOADING","CREATE_ACCOUNT_FAILURE","CREATE_ACCOUNT_SUCCESS","createAccount","userData","dispatch","accountLoading","baseUrl","process","env","REACT_APP_BASE_URL","response","post","data","auth","username","REACT_APP_API_KEY","password","REACT_APP_API_SECRET","type","payload","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,sBAAlD,QAAgF,SAAhF,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;;AACA,QAAI;AACA,YAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAY,GAAEL,OAAQ,cAAtB,EAAqC;AAAEM,QAAAA,IAAI,EAAET;AAAR,OAArC,EAAyD;AAC5EU,QAAAA,IAAI,EAAE;AACFC,UAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO,iBADpB;AAEFC,UAAAA,QAAQ,EAAET,OAAO,CAACC,GAAR,CAAYS;AAFpB;AADsE,OAAzD,CAAvB;;AAMA,UAAIP,QAAQ,CAACE,IAAb,EAAmB;AACfR,QAAAA,QAAQ,CAAC;AACLc,UAAAA,IAAI,EAAEjB,sBADD;AAELkB,UAAAA,OAAO,EAAET,QAAQ,CAACE;AAFb,SAAD,CAAR;AAIH;AACJ,KAdD,CAcE,OAAOQ,CAAP,EAAU;AACRhB,MAAAA,QAAQ,CAAC;AACLc,QAAAA,IAAI,EAAElB,sBADD;AAELmB,QAAAA,OAAO,EAAEC,CAAC,CAACV,QAAF,CAAWE;AAFf,OAAD,CAAR;AAIH;AACJ,GAtBD;AAuBH,CAxBM,C,CAyBP;;AACA,OAAO,MAAMP,cAAc,GAAG,MAAM;AAChC,SAAO;AACHa,IAAAA,IAAI,EAAEnB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\n\nimport { ACCOUNT_LOADING, CREATE_ACCOUNT_FAILURE, CREATE_ACCOUNT_SUCCESS } from './types';\n\n// create account \nexport const createAccount = (userData) => {\n    return async dispatch => {\n        dispatch(accountLoading())\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const response = await axios.post(`${baseUrl}/v1/accounts`, { data: userData }, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            })\n            if (response.data) {\n                dispatch({\n                    type: CREATE_ACCOUNT_SUCCESS,\n                    payload: response.data\n                })\n            }\n        } catch (e) {\n            dispatch({\n                type: CREATE_ACCOUNT_FAILURE,\n                payload: e.response.data\n            })\n        }\n    }\n}\n//account loading \nexport const accountLoading = () => {\n    return {\n        type: ACCOUNT_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}