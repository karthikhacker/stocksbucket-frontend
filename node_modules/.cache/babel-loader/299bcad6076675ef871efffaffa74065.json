{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOADING, USER_LOGIN_SUCCESS, USER_LOGIN_ERROR, USER_SIGNOUT_SUCCESS } from './types'; // user login \n\nexport const signin = (userObj, history) => {\n  // console.log(userObj);\n  return async dispatch => {\n    dispatch(userLoading());\n\n    try {\n      const response = await axios.post('/api/login', { ...userObj\n      });\n\n      if (response.data) {\n        // set token to local storage \n        const {\n          token,\n          user\n        } = response.data;\n        localStorage.setItem('Access-Token', token);\n        localStorage.setItem('User', JSON.stringify(user));\n        history.push('/');\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } //console.log(response.data);\n\n    } catch (error) {\n      console.log(error.response.data);\n      dispatch({\n        type: USER_LOGIN_ERROR,\n        payload: error.response.data\n      });\n    }\n  };\n};\nexport const isLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('Access-Token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('User'));\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    }\n  };\n}; // user signout \n\nexport const userSignout = () => {\n  return async dispatch => {\n    localStorage.clear();\n    dispatch({\n      type: USER_SIGNOUT_SUCCESS\n    });\n  };\n}; // user loading\n\nexport const userLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/actions/authAction.js"],"names":["axios","USER_LOADING","USER_LOGIN_SUCCESS","USER_LOGIN_ERROR","USER_SIGNOUT_SUCCESS","signin","userObj","history","dispatch","userLoading","response","post","data","token","user","localStorage","setItem","JSON","stringify","push","type","payload","error","console","log","isLoggedIn","getItem","parse","userSignout","clear"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,gBAA3C,EAA6DC,oBAA7D,QAAyF,SAAzF,C,CAEA;;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACxC;AACA,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAACC,WAAW,EAAZ,CAAR;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyB,EAAE,GAAGL;AAAL,OAAzB,CAAvB;;AACA,UAAII,QAAQ,CAACE,IAAb,EAAmB;AACf;AACA,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAkBJ,QAAQ,CAACE,IAAjC;AACAG,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,KAArC;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA7B;AACAP,QAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACAX,QAAAA,QAAQ,CAAC;AACLY,UAAAA,IAAI,EAAElB,kBADD;AAELmB,UAAAA,OAAO,EAAE;AACLR,YAAAA,KADK;AACEC,YAAAA;AADF;AAFJ,SAAD,CAAR;AAMH,OAdD,CAeA;;AACH,KAhBD,CAgBE,OAAOQ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACZ,QAAN,CAAeE,IAA3B;AACAJ,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAEjB,gBADD;AAELkB,QAAAA,OAAO,EAAEC,KAAK,CAACZ,QAAN,CAAeE;AAFnB,OAAD,CAAR;AAIH;AACJ,GAzBD;AA0BH,CA5BM;AA6BP,OAAO,MAAMa,UAAU,GAAG,MAAM;AAC5B,SAAO,MAAMjB,QAAN,IAAkB;AACrB,UAAMK,KAAK,GAAGE,YAAY,CAACW,OAAb,CAAqB,cAArB,CAAd;;AACA,QAAIb,KAAJ,EAAW;AACP,YAAMC,IAAI,GAAGG,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACW,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAlB,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAElB,kBADD;AAELmB,QAAAA,OAAO,EAAE;AAAER,UAAAA,KAAF;AAASC,UAAAA;AAAT;AAFJ,OAAD,CAAR;AAIH;AACJ,GATD;AAUH,CAXM,C,CAYP;;AACA,OAAO,MAAMc,WAAW,GAAG,MAAM;AAC7B,SAAO,MAAMpB,QAAN,IAAkB;AACrBO,IAAAA,YAAY,CAACc,KAAb;AACArB,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEhB;AADD,KAAD,CAAR;AAGH,GALD;AAMH,CAPM,C,CAQP;;AACA,OAAO,MAAMK,WAAW,GAAG,MAAM;AAC7B,SAAO;AACHW,IAAAA,IAAI,EAAEnB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport { USER_LOADING, USER_LOGIN_SUCCESS, USER_LOGIN_ERROR, USER_SIGNOUT_SUCCESS } from './types';\n\n// user login \nexport const signin = (userObj, history) => {\n    // console.log(userObj);\n    return async dispatch => {\n        dispatch(userLoading())\n        try {\n            const response = await axios.post('/api/login', { ...userObj });\n            if (response.data) {\n                // set token to local storage \n                const { token, user } = response.data;\n                localStorage.setItem('Access-Token', token);\n                localStorage.setItem('User', JSON.stringify(user));\n                history.push('/')\n                dispatch({\n                    type: USER_LOGIN_SUCCESS,\n                    payload: {\n                        token, user\n                    }\n                })\n            }\n            //console.log(response.data);\n        } catch (error) {\n            console.log(error.response.data)\n            dispatch({\n                type: USER_LOGIN_ERROR,\n                payload: error.response.data\n            })\n        }\n    }\n}\nexport const isLoggedIn = () => {\n    return async dispatch => {\n        const token = localStorage.getItem('Access-Token');\n        if (token) {\n            const user = JSON.parse(localStorage.getItem('User'))\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: { token, user }\n            })\n        }\n    }\n}\n// user signout \nexport const userSignout = () => {\n    return async dispatch => {\n        localStorage.clear();\n        dispatch({\n            type: USER_SIGNOUT_SUCCESS\n        })\n    }\n}\n// user loading\nexport const userLoading = () => {\n    return {\n        type: USER_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}