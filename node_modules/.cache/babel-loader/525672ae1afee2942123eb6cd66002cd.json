{"ast":null,"code":"import axios from 'axios';\nimport { ACCOUNT_LOADING, CREATE_ACCOUNT_FAILURE, CREATE_ACCOUNT_SUCCESS } from './types'; // create account \n\nexport const createAccount = (contact, identity, disclosures, agreements, documents) => {\n  return async dispatch => {\n    dispatch(accountLoading()); // console.log(userData);\n\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const response = await axios.post(`${baseUrl}/v1/accounts`, {\n        contact,\n        identity,\n        disclosures,\n        agreements,\n        documents\n      }, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n      console.log(response.data);\n\n      if (response.data) {\n        dispatch({\n          type: CREATE_ACCOUNT_SUCCESS,\n          payload: response.data\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      dispatch({\n        type: CREATE_ACCOUNT_FAILURE,\n        payload: e.response.data\n      });\n    }\n  };\n}; //account loading \n\nexport const accountLoading = () => {\n  return {\n    type: ACCOUNT_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/actions/accountAction.js"],"names":["axios","ACCOUNT_LOADING","CREATE_ACCOUNT_FAILURE","CREATE_ACCOUNT_SUCCESS","createAccount","contact","identity","disclosures","agreements","documents","dispatch","accountLoading","baseUrl","process","env","REACT_APP_BASE_URL","response","post","auth","username","REACT_APP_API_KEY","password","REACT_APP_API_SECRET","console","log","data","type","payload","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,sBAAlD,QAAgF,SAAhF,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,QAAV,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,SAA7C,KAA2D;AACpF,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR,CADqB,CAErB;;AACA,QAAI;AACA,YAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAY,GAAEL,OAAQ,cAAtB,EAAqC;AAAEP,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA,WAArB;AAAkCC,QAAAA,UAAlC;AAA8CC,QAAAA;AAA9C,OAArC,EAAgG;AACnHS,QAAAA,IAAI,EAAE;AACFC,UAAAA,QAAQ,EAAEN,OAAO,CAACC,GAAR,CAAYM,iBADpB;AAEFC,UAAAA,QAAQ,EAAER,OAAO,CAACC,GAAR,CAAYQ;AAFpB;AAD6G,OAAhG,CAAvB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,IAArB;;AACA,UAAIT,QAAQ,CAACS,IAAb,EAAmB;AACff,QAAAA,QAAQ,CAAC;AACLgB,UAAAA,IAAI,EAAEvB,sBADD;AAELwB,UAAAA,OAAO,EAAEX,QAAQ,CAACS;AAFb,SAAD,CAAR;AAIH;AACJ,KAfD,CAeE,OAAOG,CAAP,EAAU;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACAlB,MAAAA,QAAQ,CAAC;AACLgB,QAAAA,IAAI,EAAExB,sBADD;AAELyB,QAAAA,OAAO,EAAEC,CAAC,CAACZ,QAAF,CAAWS;AAFf,OAAD,CAAR;AAIH;AACJ,GAzBD;AA0BH,CA3BM,C,CA4BP;;AACA,OAAO,MAAMd,cAAc,GAAG,MAAM;AAChC,SAAO;AACHe,IAAAA,IAAI,EAAEzB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\n\nimport { ACCOUNT_LOADING, CREATE_ACCOUNT_FAILURE, CREATE_ACCOUNT_SUCCESS } from './types';\n\n// create account \nexport const createAccount = (contact, identity, disclosures, agreements, documents) => {\n    return async dispatch => {\n        dispatch(accountLoading())\n        // console.log(userData);\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const response = await axios.post(`${baseUrl}/v1/accounts`, { contact, identity, disclosures, agreements, documents }, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            })\n            console.log(response.data)\n            if (response.data) {\n                dispatch({\n                    type: CREATE_ACCOUNT_SUCCESS,\n                    payload: response.data\n                })\n            }\n        } catch (e) {\n            console.log(e);\n            dispatch({\n                type: CREATE_ACCOUNT_FAILURE,\n                payload: e.response.data\n            })\n        }\n    }\n}\n//account loading \nexport const accountLoading = () => {\n    return {\n        type: ACCOUNT_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}