{"ast":null,"code":"import { CLEAR_TICKER, CLEAR_TICKER_ERROR, GET_TICKER, TICKER_ERROR, TICKER_LOADING } from \"./types\";\nimport axios from 'axios'; //get ticker \n\nexport const getTicker = symb => {\n  return async dispatch => {\n    dispatch(tickerLoading());\n\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const response = await axios.get(`${baseUrl}/v1/assets/${symb}`, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data) {\n        dispatch({\n          type: GET_TICKER,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: TICKER_ERROR,\n        payload: 'NOT FOUND'\n      });\n    }\n  };\n}; // clear ticker \n\nexport const clearTicker = () => {\n  return {\n    type: CLEAR_TICKER\n  };\n}; //clear ticker error \n\nexport const clearTickerError = () => {\n  return {\n    type: CLEAR_TICKER_ERROR\n  };\n}; // ticker loading \n\nexport const tickerLoading = () => {\n  return {\n    type: TICKER_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/actions/tickerAction.js"],"names":["CLEAR_TICKER","CLEAR_TICKER_ERROR","GET_TICKER","TICKER_ERROR","TICKER_LOADING","axios","getTicker","symb","dispatch","tickerLoading","baseUrl","process","env","REACT_APP_BASE_URL","response","get","auth","username","REACT_APP_API_KEY","password","REACT_APP_API_SECRET","data","type","payload","error","clearTicker","clearTickerError"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,EAA2CC,UAA3C,EAAuDC,YAAvD,EAAqEC,cAArE,QAA2F,SAA3F;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;;AACA,QAAI;AACA,YAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEL,OAAQ,cAAaH,IAAK,EAAvC,EAA0C;AAC7DS,QAAAA,IAAI,EAAE;AACFC,UAAAA,QAAQ,EAAEN,OAAO,CAACC,GAAR,CAAYM,iBADpB;AAEFC,UAAAA,QAAQ,EAAER,OAAO,CAACC,GAAR,CAAYQ;AAFpB;AADuD,OAA1C,CAAvB;;AAMA,UAAIN,QAAQ,CAACO,IAAb,EAAmB;AACfb,QAAAA,QAAQ,CAAC;AACLc,UAAAA,IAAI,EAAEpB,UADD;AAELqB,UAAAA,OAAO,EAAET,QAAQ,CAACO;AAFb,SAAD,CAAR;AAIH;AACJ,KAdD,CAcE,OAAOG,KAAP,EAAc;AACZhB,MAAAA,QAAQ,CAAC;AACLc,QAAAA,IAAI,EAAEnB,YADD;AAELoB,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH;AACJ,GAtBD;AAuBH,CAxBM,C,CAyBP;;AACA,OAAO,MAAME,WAAW,GAAG,MAAM;AAC7B,SAAO;AACHH,IAAAA,IAAI,EAAEtB;AADH,GAAP;AAGH,CAJM,C,CAKP;;AACA,OAAO,MAAM0B,gBAAgB,GAAG,MAAM;AAClC,SAAO;AACHJ,IAAAA,IAAI,EAAErB;AADH,GAAP;AAGH,CAJM,C,CAKP;;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHa,IAAAA,IAAI,EAAElB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { CLEAR_TICKER, CLEAR_TICKER_ERROR, GET_TICKER, TICKER_ERROR, TICKER_LOADING } from \"./types\";\nimport axios from 'axios';\n\n//get ticker \nexport const getTicker = (symb) => {\n    return async dispatch => {\n        dispatch(tickerLoading())\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const response = await axios.get(`${baseUrl}/v1/assets/${symb}`, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            });\n            if (response.data) {\n                dispatch({\n                    type: GET_TICKER,\n                    payload: response.data\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: TICKER_ERROR,\n                payload: 'NOT FOUND'\n            })\n        }\n    }\n}\n// clear ticker \nexport const clearTicker = () => {\n    return {\n        type: CLEAR_TICKER\n    }\n}\n//clear ticker error \nexport const clearTickerError = () => {\n    return {\n        type: CLEAR_TICKER_ERROR\n    }\n}\n// ticker loading \nexport const tickerLoading = () => {\n    return {\n        type: TICKER_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}