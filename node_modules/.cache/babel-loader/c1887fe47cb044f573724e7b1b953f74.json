{"ast":null,"code":"import { CREATE_WATCHLIST, GET_CURRENT_WATCHLIST_ID, GET_WATCHLISTS, GET_WATCHLIST, GET_WATCHLISTS_ERROR, GET_WATCHLISTS_LOADING, WATCHLIST_LOADING, ASSET_LOADING, ADD_TICKER_TO_WATCHLIST, ASSET_ERROR, REMOVE_ASSET_FROM_WATCHLIST } from \"../actions/types\";\nconst initialState = {\n  watchlists: [],\n  assets: [],\n  assetLoading: false,\n  assetError: '',\n  assetSuccessMsg: '',\n  currentId: '',\n  watchlistsLoading: false,\n  watchlistLoading: false,\n  watchlistsError: '',\n  watchlistError: ''\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case WATCHLIST_LOADING:\n      return { ...state,\n        watchlistLoading: true\n      };\n\n    case GET_WATCHLISTS_LOADING:\n      return { ...state,\n        watchlistsLoading: true\n      };\n\n    case GET_WATCHLISTS:\n      return { ...state,\n        watchlists: action.payload,\n        watchlistsLoading: false,\n        watchlistsError: ''\n      };\n\n    case GET_WATCHLIST:\n      return { ...state,\n        assets: action.payload,\n        watchlistLoading: false\n      };\n\n    case GET_CURRENT_WATCHLIST_ID:\n      return { ...state,\n        currentId: action.payload\n      };\n\n    case CREATE_WATCHLIST:\n      return { ...state,\n        watchlists: [...state.watchlists, action.payload],\n        watchlistsLoading: false,\n        watchlistsError: ''\n      };\n\n    case ASSET_LOADING:\n      return { ...state,\n        assetLoading: true\n      };\n\n    case ADD_TICKER_TO_WATCHLIST:\n      return { ...state,\n        assets: action.payload,\n        assetLoading: false\n      };\n\n    case REMOVE_ASSET_FROM_WATCHLIST:\n      return { ...state,\n        assets: action.payload\n      };\n\n    case ASSET_ERROR:\n      return { ...state,\n        assetError: action.payload,\n        assetLoading: false\n      };\n\n    case GET_WATCHLISTS_ERROR:\n      return { ...state,\n        watchlistsError: action.payload,\n        watchlistsLoading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/reducers/watchlists.js"],"names":["CREATE_WATCHLIST","GET_CURRENT_WATCHLIST_ID","GET_WATCHLISTS","GET_WATCHLIST","GET_WATCHLISTS_ERROR","GET_WATCHLISTS_LOADING","WATCHLIST_LOADING","ASSET_LOADING","ADD_TICKER_TO_WATCHLIST","ASSET_ERROR","REMOVE_ASSET_FROM_WATCHLIST","initialState","watchlists","assets","assetLoading","assetError","assetSuccessMsg","currentId","watchlistsLoading","watchlistLoading","watchlistsError","watchlistError","state","action","type","payload"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,wBAA3B,EAAqDC,cAArD,EAAqEC,aAArE,EAAoFC,oBAApF,EAA0GC,sBAA1G,EAAkIC,iBAAlI,EAAqJC,aAArJ,EAAoKC,uBAApK,EAA6LC,WAA7L,EAA0MC,2BAA1M,QAA6O,kBAA7O;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,YAAY,EAAE,KAHG;AAIjBC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,eAAe,EAAE,EALA;AAMjBC,EAAAA,SAAS,EAAE,EANM;AAOjBC,EAAAA,iBAAiB,EAAE,KAPF;AAQjBC,EAAAA,gBAAgB,EAAE,KARD;AASjBC,EAAAA,eAAe,EAAE,EATA;AAUjBC,EAAAA,cAAc,EAAE;AAVC,CAArB;AAYA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,iBAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHH,QAAAA,gBAAgB,EAAE;AAFf,OAAP;;AAIJ,SAAKd,sBAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHJ,QAAAA,iBAAiB,EAAE;AAFhB,OAAP;;AAIJ,SAAKhB,cAAL;AACI,aAAO,EACH,GAAGoB,KADA;AAEHV,QAAAA,UAAU,EAAEW,MAAM,CAACE,OAFhB;AAGHP,QAAAA,iBAAiB,EAAE,KAHhB;AAIHE,QAAAA,eAAe,EAAE;AAJd,OAAP;;AAMJ,SAAKjB,aAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHT,QAAAA,MAAM,EAAEU,MAAM,CAACE,OAFZ;AAGHN,QAAAA,gBAAgB,EAAE;AAHf,OAAP;;AAKJ,SAAKlB,wBAAL;AACI,aAAO,EACH,GAAGqB,KADA;AAEHL,QAAAA,SAAS,EAAEM,MAAM,CAACE;AAFf,OAAP;;AAIJ,SAAKzB,gBAAL;AACI,aAAO,EACH,GAAGsB,KADA;AAEHV,QAAAA,UAAU,EAAE,CAAC,GAAGU,KAAK,CAACV,UAAV,EAAsBW,MAAM,CAACE,OAA7B,CAFT;AAGHP,QAAAA,iBAAiB,EAAE,KAHhB;AAIHE,QAAAA,eAAe,EAAE;AAJd,OAAP;;AAMJ,SAAKb,aAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHR,QAAAA,YAAY,EAAE;AAFX,OAAP;;AAIJ,SAAKN,uBAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHT,QAAAA,MAAM,EAAEU,MAAM,CAACE,OAFZ;AAGHX,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAKJ,SAAKJ,2BAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHT,QAAAA,MAAM,EAAEU,MAAM,CAACE;AAFZ,OAAP;;AAIJ,SAAKhB,WAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHP,QAAAA,UAAU,EAAEQ,MAAM,CAACE,OAFhB;AAGHX,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAKJ,SAAKV,oBAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHF,QAAAA,eAAe,EAAEG,MAAM,CAACE,OAFrB;AAGHP,QAAAA,iBAAiB,EAAE;AAHhB,OAAP;;AAKJ;AACI,aAAOI,KAAP;AAjER;AAmEH,CApED","sourcesContent":["import { CREATE_WATCHLIST, GET_CURRENT_WATCHLIST_ID, GET_WATCHLISTS, GET_WATCHLIST, GET_WATCHLISTS_ERROR, GET_WATCHLISTS_LOADING, WATCHLIST_LOADING, ASSET_LOADING, ADD_TICKER_TO_WATCHLIST, ASSET_ERROR, REMOVE_ASSET_FROM_WATCHLIST } from \"../actions/types\";\n\nconst initialState = {\n    watchlists: [],\n    assets: [],\n    assetLoading: false,\n    assetError: '',\n    assetSuccessMsg: '',\n    currentId: '',\n    watchlistsLoading: false,\n    watchlistLoading: false,\n    watchlistsError: '',\n    watchlistError: ''\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case WATCHLIST_LOADING:\n            return {\n                ...state,\n                watchlistLoading: true\n            }\n        case GET_WATCHLISTS_LOADING:\n            return {\n                ...state,\n                watchlistsLoading: true\n            }\n        case GET_WATCHLISTS:\n            return {\n                ...state,\n                watchlists: action.payload,\n                watchlistsLoading: false,\n                watchlistsError: ''\n            }\n        case GET_WATCHLIST:\n            return {\n                ...state,\n                assets: action.payload,\n                watchlistLoading: false,\n            }\n        case GET_CURRENT_WATCHLIST_ID:\n            return {\n                ...state,\n                currentId: action.payload\n            }\n        case CREATE_WATCHLIST:\n            return {\n                ...state,\n                watchlists: [...state.watchlists, action.payload],\n                watchlistsLoading: false,\n                watchlistsError: ''\n            }\n        case ASSET_LOADING:\n            return {\n                ...state,\n                assetLoading: true\n            }\n        case ADD_TICKER_TO_WATCHLIST:\n            return {\n                ...state,\n                assets: action.payload,\n                assetLoading: false\n            }\n        case REMOVE_ASSET_FROM_WATCHLIST:\n            return {\n                ...state,\n                assets: action.payload\n            }\n        case ASSET_ERROR:\n            return {\n                ...state,\n                assetError: action.payload,\n                assetLoading: false\n            }\n        case GET_WATCHLISTS_ERROR:\n            return {\n                ...state,\n                watchlistsError: action.payload,\n                watchlistsLoading: false\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}