{"ast":null,"code":"import { GET_WATCHLISTS, GET_WATCHLISTS_ERROR, WATCHLIST_LOADING, CREATE_WATCHLIST, GET_WATCHLISTS_LOADING, GET_CURRENT_WATCHLIST_ID, GET_WATCHLIST, ADD_TICKER_TO_WATCHLIST, ASSET_LOADING, REMOVE_ASSET_FROM_WATCHLIST } from \"./types\";\nimport axios from 'axios'; //get watchlists \n\nexport const getWatchlists = () => {\n  return async dispatch => {\n    dispatch(watchlistsLoading());\n\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n      const response = await axios.get(`${baseUrl}/v1/trading/accounts/${accId}/watchlists`, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data) {\n        // console.log(response.data)\n        dispatch({\n          type: GET_WATCHLISTS,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_WATCHLISTS_ERROR,\n        payload: error\n      });\n    }\n  };\n}; // create watchlist \n\nexport const createWatchlist = name => {\n  return async dispatch => {\n    dispatch(watchlistsLoading());\n\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n      const response = await axios.post(`${baseUrl}/v1/trading/accounts/${accId}/watchlists`, {\n        name\n      }, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data) {\n        //console.log(response.data)\n        dispatch({\n          type: CREATE_WATCHLIST,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_WATCHLISTS_ERROR,\n        payload: error\n      });\n    }\n  };\n}; //get current watchlist id \n\nexport const getCurrentWatchlistId = () => {\n  return async dispatch => {\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n      const response = await axios.get(`${baseUrl}/v1/trading/accounts/${accId}/watchlists`, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data) {\n        // console.log(response.data)\n        dispatch({\n          type: GET_CURRENT_WATCHLIST_ID,\n          payload: response.data[0].id\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_WATCHLISTS_ERROR,\n        payload: error\n      });\n    }\n  };\n}; // get watchlist \n\nexport const getWatchlist = id => {\n  return async dispatch => {\n    dispatch(watchlistLoading());\n\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n      const response = await axios.get(`${baseUrl}/v1/trading/accounts/${accId}/watchlists/${id}`, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data.assets !== undefined) {\n        // console.log(response.data)\n        dispatch({\n          type: GET_WATCHLIST,\n          payload: response.data.assets\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_WATCHLISTS_ERROR,\n        payload: error\n      });\n    }\n  };\n}; // add ticker  to watchlists \n\nexport const addTickersToWatchlist = (symb, id) => {\n  return async dispatch => {\n    dispatch(assetLoading());\n\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n      const response = await axios.post(`${baseUrl}/v1/trading/accounts/${accId}/watchlists/${id}`, {\n        symbol: symb\n      }, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data.assets !== undefined) {\n        //console.log(response.data.assets)\n        dispatch({\n          type: ADD_TICKER_TO_WATCHLIST,\n          payload: response.data.assets\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_WATCHLISTS_ERROR,\n        payload: error\n      });\n    }\n  };\n}; // remove asset from watchlist \n\nexport const removeAssetFromWatchlist = (symb, id) => {\n  return async dispatch => {\n    try {\n      const baseUrl = process.env.REACT_APP_BASE_URL;\n      const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n      const response = await axios.delete(`${baseUrl}/v1/trading/accounts/${accId}/watchlists/${id}/${symb}`, {\n        auth: {\n          username: process.env.REACT_APP_API_KEY,\n          password: process.env.REACT_APP_API_SECRET\n        }\n      });\n\n      if (response.data.assets !== undefined) {\n        console.log(response.data);\n        dispatch({\n          type: REMOVE_ASSET_FROM_WATCHLIST,\n          payload: response.data.assets\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_WATCHLISTS_ERROR,\n        payload: error\n      });\n    }\n  };\n}; //watchlist loading \n\nexport const watchlistLoading = () => {\n  return {\n    type: WATCHLIST_LOADING\n  };\n}; //get watchlist loading \n\nexport const watchlistsLoading = () => {\n  return {\n    type: GET_WATCHLISTS_LOADING\n  };\n}; // asset loading \n\nconst assetLoading = () => {\n  return {\n    type: ASSET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/actions/watchlistsAction.js"],"names":["GET_WATCHLISTS","GET_WATCHLISTS_ERROR","WATCHLIST_LOADING","CREATE_WATCHLIST","GET_WATCHLISTS_LOADING","GET_CURRENT_WATCHLIST_ID","GET_WATCHLIST","ADD_TICKER_TO_WATCHLIST","ASSET_LOADING","REMOVE_ASSET_FROM_WATCHLIST","axios","getWatchlists","dispatch","watchlistsLoading","baseUrl","process","env","REACT_APP_BASE_URL","accId","response","get","auth","username","REACT_APP_API_KEY","password","REACT_APP_API_SECRET","data","type","payload","error","createWatchlist","name","post","getCurrentWatchlistId","id","getWatchlist","watchlistLoading","assets","undefined","addTickersToWatchlist","symb","assetLoading","symbol","removeAssetFromWatchlist","delete","console","log"],"mappings":"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","sourcesContent":["import { GET_WATCHLISTS, GET_WATCHLISTS_ERROR, WATCHLIST_LOADING, CREATE_WATCHLIST, GET_WATCHLISTS_LOADING, GET_CURRENT_WATCHLIST_ID, GET_WATCHLIST, ADD_TICKER_TO_WATCHLIST, ASSET_LOADING, REMOVE_ASSET_FROM_WATCHLIST } from \"./types\";\nimport axios from 'axios';\n\n//get watchlists \nexport const getWatchlists = () => {\n    return async dispatch => {\n        dispatch(watchlistsLoading());\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n            const response = await axios.get(`${baseUrl}/v1/trading/accounts/${accId}/watchlists`, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            });\n            if (response.data) {\n                // console.log(response.data)\n                dispatch({\n                    type: GET_WATCHLISTS,\n                    payload: response.data\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: GET_WATCHLISTS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n// create watchlist \nexport const createWatchlist = (name) => {\n    return async dispatch => {\n        dispatch(watchlistsLoading());\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n            const response = await axios.post(`${baseUrl}/v1/trading/accounts/${accId}/watchlists`, { name }, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            });\n            if (response.data) {\n                //console.log(response.data)\n                dispatch({\n                    type: CREATE_WATCHLIST,\n                    payload: response.data\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: GET_WATCHLISTS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n//get current watchlist id \nexport const getCurrentWatchlistId = () => {\n    return async dispatch => {\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n            const response = await axios.get(`${baseUrl}/v1/trading/accounts/${accId}/watchlists`, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            });\n            if (response.data) {\n                // console.log(response.data)\n                dispatch({\n                    type: GET_CURRENT_WATCHLIST_ID,\n                    payload: response.data[0].id\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: GET_WATCHLISTS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n// get watchlist \nexport const getWatchlist = (id) => {\n    return async dispatch => {\n        dispatch(watchlistLoading())\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n            const response = await axios.get(`${baseUrl}/v1/trading/accounts/${accId}/watchlists/${id}`, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            });\n            if (response.data.assets !== undefined) {\n                // console.log(response.data)\n                dispatch({\n                    type: GET_WATCHLIST,\n                    payload: response.data.assets\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: GET_WATCHLISTS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n// add ticker  to watchlists \nexport const addTickersToWatchlist = (symb, id) => {\n    return async dispatch => {\n        dispatch(assetLoading());\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n            const response = await axios.post(`${baseUrl}/v1/trading/accounts/${accId}/watchlists/${id}`, { symbol: symb }, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            });\n            if (response.data.assets !== undefined) {\n                //console.log(response.data.assets)\n                dispatch({\n                    type: ADD_TICKER_TO_WATCHLIST,\n                    payload: response.data.assets\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: GET_WATCHLISTS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n// remove asset from watchlist \nexport const removeAssetFromWatchlist = (symb, id) => {\n    return async dispatch => {\n        try {\n            const baseUrl = process.env.REACT_APP_BASE_URL;\n            const accId = 'e94d1468-da8a-4bcc-a4dc-ccc25a40c8b4';\n            const response = await axios.delete(`${baseUrl}/v1/trading/accounts/${accId}/watchlists/${id}/${symb}`, {\n                auth: {\n                    username: process.env.REACT_APP_API_KEY,\n                    password: process.env.REACT_APP_API_SECRET\n                }\n            });\n            if (response.data.assets !== undefined) {\n                console.log(response.data)\n                dispatch({\n                    type: REMOVE_ASSET_FROM_WATCHLIST,\n                    payload: response.data.assets\n                })\n            }\n        } catch (error) {\n            dispatch({\n                type: GET_WATCHLISTS_ERROR,\n                payload: error\n            })\n        }\n    }\n}\n//watchlist loading \nexport const watchlistLoading = () => {\n    return {\n        type: WATCHLIST_LOADING\n    }\n}\n//get watchlist loading \nexport const watchlistsLoading = () => {\n    return {\n        type: GET_WATCHLISTS_LOADING\n    }\n}\n// asset loading \nconst assetLoading = () => {\n    return {\n        type: ASSET_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}