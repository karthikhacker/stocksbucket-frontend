{"ast":null,"code":"var _jsxFileName = \"/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/components/watchlist/CreateWatchlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Loading from '../Loading';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createWatchlist } from '../../actions/watchlistsAction';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateWatchlist = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const watchlistsData = useSelector(state => state.watchlists);\n  const [name, setName] = useState('');\n  const [error, setError] = useState('');\n  const {\n    watchlists,\n    watchlistsLoading\n  } = watchlistsData;\n\n  const notify = () => toast.success(\"Watchlist added\"); //handle submit \n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '') {\n      setError(\"Name is required\");\n    } else if (watchlists.length >= 5) {\n      setError('You can have only 5 watchlists');\n    } else {\n      console.log(name);\n      dispatch(createWatchlist(name));\n      setName('');\n      setError('');\n      notify();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-watchlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setName(e.target.value),\n            value: name,\n            className: \"form-control\",\n            placeholder: \"Add your watchlist name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), watchlistsLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-add-watchlist\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-name\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateWatchlist, \"1ljirKwQ8F4IUD7pmK2HP2jW3YY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateWatchlist;\nexport default CreateWatchlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateWatchlist\");","map":{"version":3,"sources":["/Users/sundararajankarthik/Documents/webdev/stocksbucket/frontend/src/components/watchlist/CreateWatchlist.js"],"names":["React","useState","Loading","useDispatch","useSelector","createWatchlist","ToastContainer","toast","CreateWatchlist","dispatch","watchlistsData","state","watchlists","name","setName","error","setError","watchlistsLoading","notify","success","handleSubmit","e","preventDefault","length","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,cAAc,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEW,IAAAA,UAAF;AAAcK,IAAAA;AAAd,MAAoCP,cAA1C;;AAEA,QAAMQ,MAAM,GAAG,MAAMX,KAAK,CAACY,OAAN,CAAc,iBAAd,CAArB,CAR0B,CAU1B;;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIT,IAAI,KAAK,EAAb,EAAiB;AACbG,MAAAA,QAAQ,CAAC,kBAAD,CAAR;AACH,KAFD,MAEO,IAAIJ,UAAU,CAACW,MAAX,IAAqB,CAAzB,EAA4B;AAC/BP,MAAAA,QAAQ,CAAC,gCAAD,CAAR;AACH,KAFM,MAEA;AACHQ,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAJ,MAAAA,QAAQ,CAACJ,eAAe,CAACQ,IAAD,CAAhB,CAAR;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,MAAM;AACT;AACJ,GAbD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAEE,YAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGC,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACK,MAAF,CAASC,KAAV,CAA3C;AAA6D,YAAA,KAAK,EAAEd,IAApE;AAA0E,YAAA,SAAS,EAAC,cAApF;AAAmG,YAAA,WAAW,EAAC;AAA/G;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKI,iBAAiB,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,gBACd;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EASKF,KAAK,iBAAI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBATd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA5CD;;GAAMP,e;UACeL,W,EACMC,W;;;KAFrBI,e;AA8CN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react'\nimport Loading from '../Loading';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createWatchlist } from '../../actions/watchlistsAction';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst CreateWatchlist = () => {\n    const dispatch = useDispatch();\n    const watchlistsData = useSelector(state => state.watchlists);\n    const [name, setName] = useState('');\n    const [error, setError] = useState('');\n\n    const { watchlists, watchlistsLoading } = watchlistsData;\n\n    const notify = () => toast.success(\"Watchlist added\");\n\n    //handle submit \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (name === '') {\n            setError(\"Name is required\")\n        } else if (watchlists.length >= 5) {\n            setError('You can have only 5 watchlists')\n        } else {\n            console.log(name);\n            dispatch(createWatchlist(name));\n            setName('');\n            setError('')\n            notify()\n        }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"create-watchlist\">\n                <h3>Create watchlist</h3>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control\" placeholder=\"Add your watchlist name\" />\n                        {watchlistsLoading ? <Loading /> :\n                            <button className=\"btn-add-watchlist\">\n                                Submit\n                            </button>\n                        }\n                    </div>\n                    {error && <span className=\"error-name\">{error}</span>}\n                </form>\n            </div>\n            <ToastContainer />\n        </div>\n    )\n}\n\nexport default CreateWatchlist\n"]},"metadata":{},"sourceType":"module"}